# Generated by Django 3.2.9 on 2021-12-03 20:57

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(default='', max_length=1000, unique=True)),
                ('_index', models.CharField(default='', max_length=1000, null=True)),
                ('_type', models.CharField(default='', max_length=1000, null=True)),
                ('_score', models.CharField(max_length=1000, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json_file', models.FileField(upload_to='json_upload_files')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fields_mapping', models.JSONField(default=dict)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanySource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_name', models.CharField(default='', max_length=1000, null=True)),
                ('person_first_name_unanalyzed', models.CharField(default='', max_length=1000, null=True)),
                ('person_last_name_unanalyzed', models.CharField(default='', max_length=1000, null=True)),
                ('person_name_unanalyzed_downcase', models.CharField(default='', max_length=1000, null=True)),
                ('person_title', models.CharField(default='', max_length=1000, null=True)),
                ('person_functions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('person_seniority', models.CharField(default='', max_length=1000, null=True)),
                ('person_email_status_cd', models.CharField(default='', max_length=1000, null=True)),
                ('person_extrapolated_email_confidence', models.CharField(default='', max_length=1000, null=True)),
                ('person_email', models.CharField(default='', max_length=1000, null=True)),
                ('person_phone', models.CharField(default='', max_length=1000, null=True)),
                ('person_sanitized_phone', models.CharField(default='', max_length=1000, null=True)),
                ('person_email_analyzed', models.CharField(default='', max_length=1000, null=True)),
                ('person_linkedin_url', models.URLField(default='', max_length=1000, null=True)),
                ('person_detailed_function', models.CharField(default='', max_length=1000, null=True)),
                ('person_title_normalized', models.CharField(default='', max_length=1000, null=True)),
                ('primary_title_normalized_for_faceting', models.CharField(default='', max_length=1000, null=True)),
                ('organization_id', models.CharField(default='', max_length=1000, null=True)),
                ('organization_name', models.CharField(default='', max_length=1000, null=True)),
                ('organization_revenue_in_thousands_int', models.IntegerField(default=0, null=True)),
                ('sanitized_organization_name_unanalyzed', models.CharField(default='', max_length=1000, null=True)),
                ('organization_retail_location_count', models.CharField(default='', max_length=1000, null=True)),
                ('organization_public_symbol', models.CharField(default='', max_length=1000, null=True)),
                ('organization_linkedin_company_size_tag_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_founded_year', models.CharField(default='', max_length=1000, null=True)),
                ('organization_alexa_ranking', models.CharField(default='', max_length=1000, null=True)),
                ('organization_num_current_employees', models.CharField(default='', max_length=1000, null=True)),
                ('organization_relevant_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_relevant_keywords_str', models.TextField(default='', null=True)),
                ('organization_industries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_linkedin_specialties', models.TextField(default='', null=True)),
                ('organization_angellist_markets', models.TextField(default='', null=True)),
                ('organization_yelp_categories', models.TextField(default='', null=True)),
                ('organization_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_linkedin_industry_tag_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_linkedin_specialty_tag_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_angellist_market_tag_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_short_description', models.TextField(default='', null=True)),
                ('organization_seo_description', models.TextField(default='', null=True)),
                ('organization_website_url', models.URLField(default='', null=True)),
                ('organization_angellist_url', models.URLField(default='', null=True)),
                ('organization_facebook_url', models.URLField(default='', null=True)),
                ('organization_twitter_url', models.URLField(default='', null=True)),
                ('organization_languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_num_languages', models.IntegerField(default=0, null=True)),
                ('organization_linkedin_numerical_urls', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_domain_status_cd', models.IntegerField(default=0, null=True)),
                ('organization_domain', models.CharField(default='', max_length=1000, null=True)),
                ('organization_domain_analyzed', models.CharField(default='', max_length=1000, null=True)),
                ('organization_phone', models.CharField(default='', max_length=1000, null=True)),
                ('organization_all_possible_domains', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_current_technologies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=1000)),
                ('organization_num_linkedin_followers', models.IntegerField(default=0, null=True)),
                ('job_functions', models.JSONField(default=dict, null=True)),
                ('person_location_city', models.CharField(default='', max_length=1000, null=True)),
                ('person_location_city_with_state_or_country', models.CharField(default='', max_length=1000, null=True)),
                ('person_location_state', models.CharField(default='', max_length=1000, null=True)),
                ('person_location_state_with_country', models.CharField(default='', max_length=1000, null=True)),
                ('person_location_country', models.CharField(default='', max_length=1000, null=True)),
                ('person_location_postal_code', models.CharField(default='', max_length=1000, null=True)),
                ('organization_hq_location_city', models.CharField(default='', max_length=1000, null=True)),
                ('organization_hq_location_city_with_state_or_country', models.CharField(default='', max_length=1000, null=True)),
                ('organization_hq_location_state', models.CharField(default='', max_length=1000, null=True)),
                ('organization_hq_location_state_with_country', models.CharField(default='', max_length=1000, null=True)),
                ('organization_hq_location_country', models.CharField(default='', max_length=1000, null=True)),
                ('organization_hq_location_postal_code', models.CharField(default='', max_length=1000, null=True)),
                ('modality', models.CharField(default='', max_length=1000, null=True)),
                ('organization_total_funding_long', models.CharField(default='', max_length=1000, null=True)),
                ('organization_latest_funding_stage_cd', models.CharField(default='', max_length=1000, null=True)),
                ('organization_latest_funding_round_amount_long', models.CharField(default='', max_length=1000, null=True)),
                ('organization_latest_funding_round_date', models.CharField(default='', max_length=1000, null=True)),
                ('string_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('textarea_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('number_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('date_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('datetime_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('picklist_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('boolean_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('multipicklist_typed_custom_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('label_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_label_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('account_label_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('account_stage_id', models.CharField(default='', max_length=1000, null=True)),
                ('account_id', models.CharField(default='', max_length=1000, null=True)),
                ('contact_emailer_campaign_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_prospect_import_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_email_verify_request_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_lead_request_id', models.CharField(default='', max_length=1000, null=True)),
                ('contact_source', models.CharField(default='', max_length=1000, null=True)),
                ('salesforce_lead_id', models.CharField(default='', max_length=1000, null=True)),
                ('salesforce_contact_id', models.CharField(default='', max_length=1000, null=True)),
                ('account_owner_id', models.CharField(default='', max_length=1000, null=True)),
                ('owner_id', models.CharField(default='', max_length=1000, null=True)),
                ('contact_owner_id', models.CharField(default='', max_length=1000, null=True)),
                ('prospected_by_team_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_unlocked', models.BooleanField(default=False)),
                ('contact_email_replied', models.BooleanField(default=False)),
                ('contact_email_clicked', models.BooleanField(default=False)),
                ('contact_email_sent', models.BooleanField(default=False)),
                ('contact_email_open', models.BooleanField(default=False)),
                ('contact_email_unsubscribed', models.BooleanField(default=False)),
                ('contact_email_spamblocked', models.BooleanField(default=False)),
                ('contact_email_autoresponder', models.BooleanField(default=False)),
                ('contact_demoed', models.BooleanField(default=False)),
                ('contact_email_no_reply', models.BooleanField(default=False)),
                ('contact_email_bounced', models.BooleanField(default=False)),
                ('contact_stage_id', models.CharField(default='', max_length=1000, null=True)),
                ('contact_created_at', models.CharField(default='', max_length=1000, null=True)),
                ('contact_last_activity_date', models.CharField(default='', max_length=1000, null=True)),
                ('contact_email_num_clicks', models.IntegerField(default=0, null=True)),
                ('contact_email_num_opens', models.IntegerField(default=0, null=True)),
                ('contact_engagement_score', models.IntegerField(default=0, null=True)),
                ('contact_campaign_statuses', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_campaign_steps', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_campaign_statuses_or_failure_reasons', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_campaign_statuses_without_campaign_id', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_campaign_send_from_aliases', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('contact_email_last_clicked_at', models.CharField(default='', max_length=1000, null=True)),
                ('contact_email_last_opened_at', models.CharField(default='', max_length=1000, null=True)),
                ('contact_phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, default=dict, null=True), default=list, null=True, size=1000)),
                ('relavence_boost', models.IntegerField(default=0, null=True)),
                ('contact_has_pending_email_arcgate_request', models.BooleanField(default=False)),
                ('indexed_at', models.CharField(default='', max_length=1000, null=True)),
                ('predictive_scores', models.CharField(default='', max_length=1000, null=True)),
                ('test_predictive_score', models.CharField(default='', max_length=1000, null=True)),
                ('account_zenflow_project_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('zenflow_project_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200, null=True), default=list, null=True, size=10)),
                ('job_start_date', models.CharField(default='', max_length=1000, null=True)),
                ('company_detail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_source', to='core.companydetails')),
            ],
        ),
    ]
